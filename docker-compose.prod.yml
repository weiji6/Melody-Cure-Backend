version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: melody_cure_mysql_prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: melody_cure
      MYSQL_USER: melody_cure
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - melody_cure_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: melody_cure_redis_prod
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - melody_cure_network

  # 后端应用
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: melody_cure_backend_prod
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=melody_cure
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=melody_cure
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - QINIU_ACCESS_KEY=${QINIU_ACCESS_KEY}
      - QINIU_SECRET_KEY=${QINIU_SECRET_KEY}
      - QINIU_BUCKET=${QINIU_BUCKET}
      - QINIU_DOMAIN=${QINIU_DOMAIN}
    depends_on:
      - mysql
      - redis
    networks:
      - melody_cure_network
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: melody_cure_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - melody_cure_network

volumes:
  mysql_data_prod:
  redis_data_prod:

networks:
  melody_cure_network:
    driver: bridge